files:
  "/var/app/elasticbeanstalk/hooks/appdeploy/post/run_supervised_celeryd.sh" :
    mode: "000777"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash

      # Get django environment variables
      celeryenv=`cat /var/app/current/env | tr '\n' ',' | sed 's/export //g' | sed 's/$PATH/%(ENV_PATH)s/g' | sed 's/$PYTHONPATH//g' | sed 's/$LD_LIBRARY_PATH//g' | sed 's/%/%%/g'`
      celeryenv=${celeryenv%?}

      # Create celery configuration script
      celeryconf="[program:celeryd-worker]
      ; Set full path to celery program if using virtualenv
      command=/var/app/venv/staging-LQM1lest/bin/celery worker -A integraflow --loglevel=INFO

      directory=/var/app/current/app
      user=root
      numprocs=1
      stdout_logfile=/var/log/celery-worker.log
      stderr_logfile=/var/log/celery-worker.log
      autostart=true
      autorestart=true
      startsecs=10

      ; Need to wait for currently executing tasks to finish at shutdown.
      ; Increase this if you have very long running tasks.
      stopwaitsecs = 600

      ; When resorting to send SIGKILL to the program to terminate it
      ; send SIGKILL to its whole process group instead,
      ; taking care of its children as well.
      killasgroup=true

      ; if rabbitmq is supervised, set its priority higher
      ; so it starts first
      priority=998

      environment=$celeryenv

      [program:celeryd-beat]
      ; Set full path to celery program if using virtualenv
      command=/var/app/venv/staging-LQM1lest/bin/celery beat -A integraflow --loglevel=INFO

      directory=/var/app/current/app
      user=root
      numprocs=1
      stdout_logfile=/var/log/celery-beat.log
      stderr_logfile=/var/log/celery-beat.log
      autostart=true
      autorestart=true
      startsecs=10

      ; Need to wait for currently executing tasks to finish at shutdown.
      ; Increase this if you have very long running tasks.
      stopwaitsecs = 600

      ; When resorting to send SIGKILL to the program to terminate it
      ; send SIGKILL to its whole process group instead,
      ; taking care of its children as well.
      killasgroup=true

      ; if rabbitmq is supervised, set its priority higher
      ; so it starts first
      priority=1000

      environment=$celeryenv"

      # Create the celery supervisord conf script
      echo "$celeryconf" | tee /var/app/etc/celery.conf

      # Add configuration script to supervisord conf (if not there already)
      if ! grep -Fxq "[include]" /var/app/etc/supervisord.conf
        then
        echo "[include]" | tee -a /var/app/etc/supervisord.conf
        echo "files: celery.conf" | tee -a /var/app/etc/supervisord.conf
      fi

      # Reread the supervisord config
      supervisorctl -c /var/app/etc/supervisord.conf reread

      # Update supervisord in cache without restarting all services
      supervisorctl -c /var/app/etc/supervisord.conf update

      # Start/Restart celeryd through supervisord
      supervisorctl -c /var/app/etc/supervisord.conf restart celeryd-beat
      supervisorctl -c /var/app/etc/supervisord.conf restart celeryd-worker

commands:
  06_celery_tasks_run:
    command: "/var/app/elasticbeanstalk/hooks/appdeploy/post/run_supervised_celeryd.sh"
    leader_only: true
