version: '3.8'

services:
  frontend:
    container_name: frontend
    build:
      context: ./apps/frontend
    volumes:
      - ./apps/frontend:/frontend
      - /frontend/node_modules
    env_file:
      - ./.env
    restart: always
    command: "yarn dev"

  redis:
    image: redis:alpine
    container_name: redis

  db:
    image: postgres:alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    container_name: postgres_db

  backend:
    container_name: backend
    build:
      context: ./backend
    volumes:
      - ./backend:/backend
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CACHE_URL=redis://redis:6379/0
    restart: always
    depends_on:
      - db
    
  proxy:
    image: nginx:stable-alpine
    ports:
      - 8000:8000
    volumes:
      - ./nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
    container_name: proxy
    depends_on:
      - backend
      - frontend
